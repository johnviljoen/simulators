import matplotlib.pyplot as plt

def lef_comparison(x_sequence_1, x_sequence_2, time_sequence):
    f0,(f0ax0,f0ax1,) = plt.subplots(1, 2)
    f0ax0.plot(time_sequence, x_sequence_1[:,0], label='LF_state')
    f0ax0.plot(time_sequence, x_sequence_2[:,0], label='LF_state')
    f0ax0.legend(loc="upper right")
    f0ax1.plot(time_sequence, x_sequence_2[:,1], label='dLEF')
    f0ax1.plot(time_sequence, x_sequence_1[:,1], label='dLEF')
    f0ax1.legend(loc="upper right")
    plt.show()

def states(x_sequence, time_sequence):
    f0,(f0ax0,f0ax1,f0ax2) = plt.subplots(1, 3)
    f0ax0.plot(time_sequence, x_sequence[:,0], label='npos')
    f0ax0.legend(loc="upper right")
    f0ax1.plot(time_sequence, x_sequence[:,1], label='epos')
    f0ax1.legend(loc="upper right")
    f0ax2.plot(time_sequence, x_sequence[:,2], label='alt')
    f0ax2.legend(loc="upper right")
    f1,(f1ax0,f1ax1,f1ax2) = plt.subplots(1, 3)
    f1ax0.plot(time_sequence, x_sequence[:,3], label='phi')
    f1ax0.legend(loc="upper right")
    f1ax1.plot(time_sequence, x_sequence[:,4], label='theta')
    f1ax1.legend(loc="upper right")
    f1ax2.plot(time_sequence, x_sequence[:,5], label='psi')
    f1ax2.legend(loc="upper right")
    f2,(f2ax0,f2ax1,f2ax2) = plt.subplots(1, 3)
    f2ax0.plot(time_sequence, x_sequence[:,6], label='V')
    f2ax0.legend(loc="upper right")
    f2ax1.plot(time_sequence, x_sequence[:,7], label='alpha')
    f2ax1.legend(loc="upper right")
    f2ax2.plot(time_sequence, x_sequence[:,8], label='beta')
    f2ax2.legend(loc="upper right")
    f3,(f3ax0,f3ax1,f3ax2) = plt.subplots(1, 3)
    f3ax0.plot(time_sequence, x_sequence[:,9], label='p')
    f3ax0.legend(loc="upper right")
    f3ax1.plot(time_sequence, x_sequence[:,10], label='q')
    f3ax1.legend(loc="upper right")
    f3ax2.plot(time_sequence, x_sequence[:,11], label='r')
    f3ax2.legend(loc="upper right")
    f4,(f4ax0,f4ax1,f4ax2,f4ax3) = plt.subplots(1, 4)
    f4ax0.plot(time_sequence, x_sequence[:,12], label='T_sim')
    f4ax0.legend(loc="upper right")
    f4ax1.plot(time_sequence, x_sequence[:,13], label='dstab_sim')
    f4ax1.legend(loc="upper right")
    f4ax2.plot(time_sequence, x_sequence[:,14], label='ail_sim')
    f4ax2.legend(loc="upper right")
    f4ax3.plot(time_sequence, x_sequence[:,15], label='rudder_sim')
    f4ax3.legend(loc="upper right")
    f5,(f5ax0,f5ax1) = plt.subplots(1,2)
    f5ax0.plot(time_sequence, x_sequence[:,16], label='dLEF')
    f5ax0.legend(loc="upper right")
    f5ax1.plot(time_sequence, x_sequence[:,17], label='LF_state')
    f5ax1.legend(loc="upper right")

    plt.show()

def state_comparison(x_sequence_1, x_sequence_2, time_sequence):
    f0,(f0ax0,f0ax1,f0ax2) = plt.subplots(1, 3)
    f0ax0.plot(time_sequence, x_sequence_1[:,0], label='npos')
    f0ax0.plot(time_sequence, x_sequence_2[:,0], label='npos')
    f0ax0.legend(loc="upper right")
    f0ax1.plot(time_sequence, x_sequence_1[:,1], label='epos')
    f0ax1.plot(time_sequence, x_sequence_2[:,1], label='epos')
    f0ax1.legend(loc="upper right")
    f0ax2.plot(time_sequence, x_sequence_1[:,2], label='alt')
    f0ax2.plot(time_sequence, x_sequence_2[:,2], label='alt')
    f0ax2.legend(loc="upper right")
    f1,(f1ax0,f1ax1,f1ax2) = plt.subplots(1, 3)
    f1ax0.plot(time_sequence, x_sequence_1[:,3], label='phi')
    f1ax0.plot(time_sequence, x_sequence_2[:,3], label='phi')
    f1ax0.legend(loc="upper right")
    f1ax1.plot(time_sequence, x_sequence_1[:,4], label='theta')
    f1ax1.plot(time_sequence, x_sequence_2[:,4], label='theta')
    f1ax1.legend(loc="upper right")
    f1ax2.plot(time_sequence, x_sequence_1[:,5], label='psi')
    f1ax2.plot(time_sequence, x_sequence_2[:,5], label='psi')
    f1ax2.legend(loc="upper right")
    f2,(f2ax0,f2ax1,f2ax2) = plt.subplots(1, 3)
    f2ax0.plot(time_sequence, x_sequence_1[:,6], label='V')
    f2ax0.plot(time_sequence, x_sequence_2[:,6], label='V')
    f2ax0.legend(loc="upper right")
    f2ax1.plot(time_sequence, x_sequence_1[:,7], label='alpha')
    f2ax1.plot(time_sequence, x_sequence_2[:,7], label='alpha')
    f2ax1.legend(loc="upper right")
    f2ax2.plot(time_sequence, x_sequence_1[:,8], label='beta')
    f2ax2.plot(time_sequence, x_sequence_2[:,8], label='beta')
    f2ax2.legend(loc="upper right")
    f3,(f3ax0,f3ax1,f3ax2) = plt.subplots(1, 3)
    f3ax0.plot(time_sequence, x_sequence_1[:,9], label='p')
    f3ax0.plot(time_sequence, x_sequence_2[:,9], label='p')
    f3ax0.legend(loc="upper right")
    f3ax1.plot(time_sequence, x_sequence_1[:,10], label='q')
    f3ax1.plot(time_sequence, x_sequence_2[:,10], label='q')
    f3ax1.legend(loc="upper right")
    f3ax2.plot(time_sequence, x_sequence_1[:,11], label='r')
    f3ax2.plot(time_sequence, x_sequence_2[:,11], label='r')
    f3ax2.legend(loc="upper right")
    f4,(f4ax0,f4ax1,f4ax2,f4ax3) = plt.subplots(1, 4)
    f4ax0.plot(time_sequence, x_sequence_1[:,12], label='T_sim')
    f4ax0.plot(time_sequence, x_sequence_2[:,12], label='T_ref')
    f4ax0.legend(loc="upper right")
    f4ax1.plot(time_sequence, x_sequence_1[:,13], label='dstab_sim')
    f4ax1.plot(time_sequence, x_sequence_2[:,13], label='dstab_ref')
    f4ax1.legend(loc="upper right")
    f4ax2.plot(time_sequence, x_sequence_1[:,14], label='ail_sim')
    f4ax2.plot(time_sequence, x_sequence_2[:,14], label='ail_ref')
    f4ax2.legend(loc="upper right")
    f4ax3.plot(time_sequence, x_sequence_1[:,15], label='rudder_sim')
    f4ax3.plot(time_sequence, x_sequence_2[:,15], label='rudder_ref')
    f4ax3.legend(loc="upper right")

    plt.show()